.\" Hey Emacs! This file is -*- nroff -*- source.
.\"
.\" This manpage is Copyright (C) 1999 Tim Martin
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\"
.TH sasl_client_new "21 June 2001" SASL "SASL man pages"
.SH NAME
sasl_client_new \- Create a new client authentication object


.SH SYNOPSIS
.nf
.B #include <sasl/sasl.h>
.sp
.BI "int sasl_client_new(const char " *service ", "
.BI "			 const char " *serverFQDN ", "
.BI "			 const char " *iplocalport ", "
.BI "			 const char " *ipremoteport ", "
.BI "			 const sasl_callback_t " *prompt_supp,
.BI "			 unsigned " secflags ", "
.BI "			 sasl_conn_t ** " pconn ");"

.fi
.SH DESCRIPTION

.B sasl_client_new()
creates a new SASL context. This context will be used for all SASL calls for one connection. It handles both authentication and integrity/encyption layers after authentication.
.PP
.I service
is the registered name of the service (usually the protocol name) using SASL (e.g. "imap").
.PP
.I serverFQDN
is the fully qualified domain name of the server (e.g. "serverhost.cmu.edu").
.PP
.I iplocalport
is the IP and port of the local side of the connection, or NULL.  If
iplocalport is NULL it will disable mechanisms that require IP address
information.  This strings must be in one of the following formats:
"a.b.c.d;port" (IPv4), "e:f:g:h:i:j:k:l;port" (IPv6),
or "e:f:g:h:i:j:a.b.c.d;port" (IPv6)
.PP
.I ipremoteport
is the IP and port of the remote side of the connection, or NULL (see
iplocalport)
.PP
.I prompt_supp
is a list of client interactions supported that is unique to this connection. If this parameter is NULL the global callbacks (specified in sasl_client_init) will be used. See sasl_callback for more information.
.PP
.I secflags
are security flags (see below)
.PP
.I pconn
is the conection context allocated by the library. This structure will be used for all future SASL calls for this connection.
.PP
.B Security Flags
.PP
Security flags that may be passed to
.B sasl_server_new()
include
.TP 0.8i
.B SASL_SEC_NOPLAINTEXT
Don't permit mechanisms susceptible to simple passive attack (e.g., PLAIN, LOGIN)
.TP 0.8i
.B SASL_SEC_NOACTIVE
Protection from active (non-dictionary) attacks during authentication exchange. Authenticates server.
.TP 0.8i
.B SASL_SEC_NODICTIONARY
Don't permit mechanisms susceptible to passive dictionary attack
.TP 0.8i
.B SASL_SEC_FORWARD_SECURITY
Require forward secrecy between sessions. (breaking one won't help break next)
.TP 0.8i
.B SASL_SEC_NOANONYMOUS
Don't permit mechanisms that allow anonymous login
.TP 0.8i
.B SASL_SEC_PASS_CREDENTIALS
Require mechanisms which pass client credentials, and allow mechanisms which can pass credentials to do so.
.TP 0.8i
.B SASL_SEC_MAXIMUM
All of the above.

.SH "RETURN VALUE"

sasl_client_new returns an integer which corresponds to one of the
following codes. SASL_OK is the only one that indicates success. All
others indicate errors and should either be handled or the
authentication session should be quit.

.SH ERRORS
.TP 0.8i
.B SASL_OK
Success
.TP 0.8i
.B SASL_BADPARAM
Error in config file or passed parameters
.TP 0.8i
.B SASL_NOMECH
No mechanism meets requested properties
.TP 0.8i
.B SASL_NOMEM
Not enough memory to complete operation

.SH "CONFORMING TO"
RFC 2222
.SH "SEE ALSO"
sasl(3), sasl_client_init(3), sasl_client_start(3), sasl_client_step(3), sasl_setprop(3)

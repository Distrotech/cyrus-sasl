.\" Hey Emacs! This file is -*- nroff -*- source.
.\"
.\" This manpage is Copyright (C) 1999 Tim Martin
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\"
.TH sasl_server_new "16 May 2001" SASL "SASL man pages"
.SH NAME
sasl_server_new \- Create a new server authentication object


.SH SYNOPSIS
.nf
.B #include <sasl/sasl.h>
.sp
.BI "int sasl_server_new(const char " *service ", "
.BI "			 const char " *serverFQDN ", "
.BI "			 const char " *user_realm ", "
.BI "			 const char " *iplocalport ", "
.BI "			 const char " *ipremoteport ", "
.BI "			 const sasl_callback_t " *callbacks ", "
.BI "			 unsigned " secflags ", "
.BI "			 sasl_conn_t ** " pconn ");"

.fi
.SH DESCRIPTION

.B sasl_server_new()
creates a new SASL context. This context will be used for all SASL
calls for one connection. It handles both authentication and
integrity/encyption layers after authentication.
.PP
.I service
is the registered name of the service (usually the protocol name) using SASL (e.g. "imap").
.PP
.I serverFQDN
is the fully qualified server domain name.  NULL means use gethostname().  This is useful for multi-homed servers.
.PP
.I user_realm
is the domain of the user agent. This is usually not necessary (NULL is default)
.PP
.I iplocalport
is the IP and port of the local side of the connection, or NULL.  If
iplocalport is NULL it will disable mechanisms that require IP address
information.  This strings must be in one of the following formats:
"a.b.c.d;port" (IPv4), "e:f:g:h:i:j:k:l;port" (IPv6),
or "e:f:g:h:i:j:a.b.c.d;port" (IPv6)
.PP
.I ipremoteport
is the IP and port of the remote side of the connection, or NULL (see
iplocalport)
.PP
.I secflags
are security flags (see below)
.PP
.I pconn
is a pointer to the conection context allocated by the library. This
structure will be used for all future SASL calls for this connection.
.PP

.B Security Flags
.PP
Security flags that may be passed to
.B sasl_server_new()
include
.TP 0.8i
.B NOPLAINTEXT
Don't permit mechanisms susceptible to simple passive attack (e.g., PLAIN, LOGIN)
.TP 0.8i
.B NOACTIVE
Protection from active (non-dictionary) attacks during authentication exchange.
Authenticates server.
.TP 0.8i
.B NODICTIONARY
Don't permit mechanisms susceptible to passive dictionary attack
.TP 0.8i
.B FORWARD_SECURITY
Require forward secrecy between sessions. (breaking one won't help break next)
.TP 0.8i
.B PASS_CREDENTIALS
Require mechanisms which pass client credentials, and allow mechanisms which can pass credentials to do so.

.SH "RETURN VALUE"

.B sasl_server_new()
returns an integer which corresponds to one of the
SASL error codes. SASL_OK is the only one that indicates success. All
others indicate errors and should either be handled or the
authentication session should be quit.

.SH "CONFORMING TO"
RFC 2222
.SH "SEE ALSO"
sasl(3), sasl_errors(3), sasl_server_init(3), sasl_server_start(3), sasl_server_step(3), sasl_setprop(3)

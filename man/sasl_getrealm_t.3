.\" Hey Emacs! This file is -*- nroff -*- source.
.\"
.\" This manpage is Copyright (C) 1999 Tim Martin
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\"
.TH sasl_getrealm_t "26 March 2000" SASL "SASL man pages"
.SH NAME
sasl_getrealm_t \- Realm Acquisition Callback

.SH SYNOPSIS
.nf
.B #include <sasl/sasl.h>

.sp
.BI "int sasl_getrealm_t(void " *context ", int " id ", "
.BI "			 const char " **availrealms ","
.BI "                    const char " **result ")"

.fi
.SH DESCRIPTION

.B sasl_getrealm_t
is used when there is an interaction with SASL_CB_GETREALM as the type.
The challenge of the sasl_interact_t will be of the format {realm1, realm2, ...}.
That is a list of possible realms seperated by comma spaces
enclosed by brackets.  It will be "{}" if the client is expected to select
the realm.

If a mechanism would use this callback, but it is not present, then the first
realm listed is automatically selected.  (Note that a mechanism may still
force the existance of a getrealm callback by SASL_CB_GETREALM to its
required_prompts list).

.I context
context from the callback record

.I availrealms
The challenge string in the format {realm1, realm2, ....}

.I result
The chosen realm.

.SH "RETURN VALUE"
SASL callback functions should return SASL return codes. See sasl.h for a complete list. SASL_OK indicates success.

.SH "SEE ALSO"
sasl(3), sasl_callbacks(3)